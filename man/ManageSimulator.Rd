% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ManageSimulator.R
\name{ManageSimulator}
\alias{ManageSimulator}
\alias{ManageSimulator.Raster}
\alias{ManageSimulator.SpatRaster}
\alias{ManageSimulator.Region}
\title{Manage simulator class builder}
\usage{
ManageSimulator(
  region,
  time_steps = 1,
  step_duration = 1,
  step_units = "years",
  collation_steps = 1,
  replicates = 1,
  result_stages = NULL,
  parallel_cores = NULL,
  initializer = NULL,
  population_model = NULL,
  dispersal_models = list(),
  impacts = list(),
  actions = list(),
  user_function = NULL,
  ...
)

\method{ManageSimulator}{Raster}(region, ...)

\method{ManageSimulator}{SpatRaster}(region, ...)

\method{ManageSimulator}{Region}(
  region,
  time_steps = 1,
  step_duration = 1,
  step_units = "years",
  collation_steps = 1,
  replicates = 1,
  result_stages = NULL,
  parallel_cores = NULL,
  initializer = NULL,
  population_model = NULL,
  dispersal_models = list(),
  impacts = list(),
  actions = list(),
  user_function = NULL,
  ...
)
}
\arguments{
\item{region}{A \code{raster::RasterLayer}, \code{terra::SpatRaster}, or
\code{bsspread::Region} or inherited class object representing the spatial
region (template) for the incursion management simulations.}

\item{time_steps}{The number of discrete time steps to simulate. Default is
1.}

\item{step_duration}{The duration of the simulation time steps in units
specified by \code{step_units}. Default is 1.}

\item{step_units}{The units for the simulation step duration
(\code{step_duration}) as a character string. Default is "years".}

\item{collation_steps}{The interval in time steps for collating results.
Default is 1, that is, results are collated at every time step.}

\item{replicates}{The number of replicate or repeated simulations to be run.
Default is 1. Note that replicate simulations results are collated as
summary statistics across simulations.}

\item{result_stages}{Optionally combine (sum) specified stages (a vector of
stage indices) of stage-based population results. The default
(\code{NULL}) maintains results for each stage.}

\item{parallel_cores}{Number of cores available for parallel processing.
The default NULL implies no parallel processing.}

\item{initializer}{A \code{bsspread::Initializer} or inherited class object
for generating the initial invasive species population distribution or
incursion locations, as well as optionally generating subsequent
incursions during the incursion management simulations.}

\item{population_model}{A \code{bsspread::Population} or inherited class
object defining the population representation and growth functionality for
the incursion management simulations.}

\item{dispersal_models}{A list of \code{bsspread::Dispersal} or inherited
class objects defining the dispersal functionality for the different
spread vectors to be simulated.}

\item{impacts}{A list of \code{ManageImpacts} class objects specifying how
to calculate various impacts of the simulated population at each time
step. Each impact object encapsulates a \code{bsimpact::ImpactAnalysis} or
inherited class object.}

\item{actions}{A list of \code{ManageActions} or inherited class objects for
applying invasive species management actions, such as detection, control,
and removal.}

\item{user_function}{An optional user-defined \code{function(n, r, tm)} that
is applied to the population vector or matrix \code{n} (returning a
transformed \code{n}) prior to collating the results at simulation
replicate \code{r} and time step \code{tm}.}

\item{...}{Additional parameters.}
}
\value{
A \code{ManageSimulator} class object (list) containing functions for
setting objects (in the function environment) and running the simulations:
\describe{
\item{\code{set_initializer(object)}}{Set the initializer object.}
\item{\code{set_population_model(model)}}{Set the population model
object.}
\item{\code{set_dispersal_models(models)}}{Set the list of dispersal
model objects.}
\item{\code{run()}}{Run the simulations and return the results.}
}
}
\description{
Builds a class to configure and run replicate discrete-time incursion
management simulations over a given spatial region using (sub)models for
simulating population growth and dispersal, calculating impacts, and
applying management actions, such as detection, control and removal. Extends
the \code{bsspread::Simulator} package module.
}
\references{
Baker, C. M., Bower, S., Tartaglia, E., Bode, M., Bower, H., & Pressey,
R. L. (2018). Modelling the spread and control of cherry guava on Lord
Howe Island. \emph{Biological Conservation}, 227, 252–258.
\doi{10.1016/j.biocon.2018.09.017}

Bradhurst, R., Spring, D., Stanaway, M., Milner, J., & Kompas, T. (2021).
A generalised and scalable framework for modelling incursions,
surveillance and control of plant and environmental pests.
\emph{Environmental Modelling & Software}, 139, N.PAG.
\doi{10.1016/j.envsoft.2021.105004}

Cacho, O. J., & Hester, S. M. (2022). Modelling biocontrol of invasive
insects: An application to European Wasp (Vespula germanica) in Australia.
\emph{Ecological Modelling}, 467. \doi{10.1016/j.ecolmodel.2022.109939}

García Adeva, J. J., Botha, J. H., & Reynolds, M. (2012). A simulation
modelling approach to forecast establishment and spread of Bactrocera
fruit flies. \emph{Ecological Modelling}, 227, 93–108.
\doi{10.1016/j.ecolmodel.2011.11.026}

Gormley, A. M., Holland, E. P., Barron, M. C., Anderson, D. P., & Nugent,
G. (2016). A modelling framework for predicting the optimal balance
between control and surveillance effort in the local eradication of
tuberculosis in New Zealand wildlife.
\emph{Preventive Veterinary Medicine}, 125, 10–18.
\doi{10.1016/j.prevetmed.2016.01.007}

Krug, R. M., Roura-Pascual, N., & Richardson, D. M. (2010). Clearing of
invasive alien plants under different budget scenarios: using a
simulation model to test efficiency. \emph{Biological Invasions}, 12(12),
4099–4112. \doi{10.1007/s10530-010-9827-3}

Lustig, A., James, A., Anderson, D., & Plank, M. (2019). Pest control at a
regional scale: Identifying key criteria using a spatially explicit,
agent‐based model. \emph{Journal of Applied Ecology}, 56(7 pp.1515–1527),
1527–1515. \doi{10.1111/1365-2664.13387}

Rout, T. M., Moore, J. L., & McCarthy, M. A. (2014). Prevent, search or
destroy? A partially observable model for invasive species management.
\emph{Journal of Applied Ecology}, 51(3), 804–813.
\doi{10.1111/1365-2664.12234}

Spring, D., Croft, L., & Kompas, T. (2017). Look before you treat:
increasing the cost effectiveness of eradication programs with aerial
surveillance. \emph{Biological Invasions}, 19(2), 521.
\doi{10.1007/s10530-016-1292-1}

Wadsworth, R. A., Collingham, Y. C., Willis, S. G., Huntley, B., & Hulme,
P. E. (2000). Simulating the Spread and Management of Alien Riparian
Weeds: Are They Out of Control? \emph{Journal of Applied Ecology}, 37,
28–38. \doi{10.1046/j.1365-2664.2000.00551.x}

Warburton, B., & Gormley, A. M. (2015). Optimising the Application of
Multiple-Capture Traps for Invasive Species Management Using Spatial
Simulation. \emph{PLoS ONE}, 10(3), 1–14.
\doi{10.1371/journal.pone.0120373}

Zub, K., García-Díaz, P., Sankey, S., Eisler, R., & Lambin, X. (2022).
Using a Modeling Approach to Inform Progress Towards Stoat Eradication
From the Orkney Islands. \emph{Frontiers in Conservation Science}, 2.
\doi{10.3389/fcosc.2021.780102}
}
